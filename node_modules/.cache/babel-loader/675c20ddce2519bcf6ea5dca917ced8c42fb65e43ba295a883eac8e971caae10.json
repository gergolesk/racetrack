{"ast":null,"code":"var _jsxFileName = \"/home/georg/kood/racetrack/src/front/Login.js\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userTypes = [\"RECEPTIONIST\", \"OBSERVER\", \"SAFETY\"];\nconst userTypeKeys = {\n  RECEPTIONIST: \"RECEPTIONIST_KEY\",\n  OBSERVER: \"OBSERVER_KEY\",\n  SAFETY: \"SAFETY_KEY\"\n};\nfunction Login({\n  socket\n}) {\n  _s();\n  const userTypeRef = useRef(null);\n  const passwordRef = useRef(null);\n  const navigate = useNavigate();\n  function signIn() {\n    const userData = {\n      user: userTypeRef.current.value,\n      password: passwordRef.current.value\n    };\n    socket.emit(\"validate_access_key\", userData, response => {\n      if (response.success) {\n        sessionStorage.setItem(\"accessKey\", response.message);\n        navigate(\"/\");\n      } else {\n        alert(\"\");\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"user\",\n      children: \"Select user type:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 60\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"user\",\n      id: \"user\",\n      ref: userTypeRef,\n      children: userTypes.map(userType => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: userTypeKeys[userType],\n        children: userType\n      }, userType, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: passwordRef,\n      type: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 56\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: signIn,\n      children: \"Logi sisse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"+90JlbGCYfN91yiNisWYzoT5bWU=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useRef","useNavigate","jsxDEV","_jsxDEV","userTypes","userTypeKeys","RECEPTIONIST","OBSERVER","SAFETY","Login","socket","_s","userTypeRef","passwordRef","navigate","signIn","userData","user","current","value","password","emit","response","success","sessionStorage","setItem","message","alert","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","id","ref","map","userType","type","onClick","_c","$RefreshReg$"],"sources":["/home/georg/kood/racetrack/src/front/Login.js"],"sourcesContent":["import {useRef} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst userTypes = [\"RECEPTIONIST\", \"OBSERVER\", \"SAFETY\"];\nconst userTypeKeys = {\n    RECEPTIONIST: \"RECEPTIONIST_KEY\",\n    OBSERVER: \"OBSERVER_KEY\",\n    SAFETY: \"SAFETY_KEY\"\n};\n\n\nfunction Login({socket}) {\n    const userTypeRef = useRef(null)\n    const passwordRef = useRef(null)\n    const navigate = useNavigate()\n\n    function signIn() {\n        const userData = {\n            user: userTypeRef.current.value,\n            password: passwordRef.current.value\n        }\n\n        socket.emit(\"validate_access_key\", userData, (response) => {\n            if (response.success) {\n                sessionStorage.setItem(\"accessKey\", response.message);\n                navigate(\"/\");\n            } else {\n                alert(\"\")\n            }\n        })\n    }\n\n    return (\n        <div>\n            <label htmlFor=\"user\">Select user type:</label><br/>\n            <select name=\"user\" id=\"user\" ref={userTypeRef}>\n                {userTypes.map(userType => (\n                    <option key={userType} value={userTypeKeys[userType]}>\n                        {userType}\n                    </option>\n                ))}\n            </select><br/>\n            <label>Password</label> <br/>\n            <input ref={passwordRef} type=\"password\"/> <br/>\n            <button onClick={signIn}>Logi sisse</button>\n        </div>)\n}\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}