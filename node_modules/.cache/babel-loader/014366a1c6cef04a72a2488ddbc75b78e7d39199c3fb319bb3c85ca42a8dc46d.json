{"ast":null,"code":"var _jsxFileName = \"/home/georg/kood/racetrack/src/back/SessionContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SessionContext = /*#__PURE__*/createContext();\nexport const useSession = () => {\n  _s();\n  const context = useContext(SessionContext);\n  return [context.sessions, context.setSessions, context.getNextStartingSession];\n};\n_s(useSession, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SessionProvider = ({\n  socket,\n  children\n}) => {\n  _s2();\n  const [sessions, setSessions] = useState([]);\n  useEffect(() => {\n    const handleReceiveSession = sessions => {\n      console.log(\"Sessions received:\", sessions);\n      setSessions(sessions);\n    };\n    socket.on(\"receive_session\", handleReceiveSession);\n    // Fetch sessions on mount\n    socket.emit(\"get_sessions\");\n    return () => {\n      socket.off(\"receive_session\", handleReceiveSession);\n    };\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(SessionContext.Provider, {\n    value: {\n      sessions,\n      setSessions\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s2(SessionProvider, \"TH/2S4xpmKAC4lsJs+5/MNwbh30=\");\n_c = SessionProvider;\nvar _c;\n$RefreshReg$(_c, \"SessionProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","SessionContext","useSession","_s","context","sessions","setSessions","getNextStartingSession","SessionProvider","socket","children","_s2","handleReceiveSession","console","log","on","emit","off","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/georg/kood/racetrack/src/back/SessionContext.js"],"sourcesContent":["import React, {createContext, useContext, useEffect, useState} from 'react';\n\nconst SessionContext = createContext();\nexport const useSession = () => {\n    const context = useContext(SessionContext);\n    return [context.sessions, context.setSessions, context.getNextStartingSession];\n};\nexport const SessionProvider = ({socket, children}) => {\n    const [sessions, setSessions] = useState([]);\n\n    useEffect(() => {\n        const handleReceiveSession = (sessions) => {\n            console.log(\"Sessions received:\", sessions);\n            setSessions(sessions);\n        };\n\n        socket.on(\"receive_session\", handleReceiveSession);\n        // Fetch sessions on mount\n        socket.emit(\"get_sessions\");\n        return () => {\n            socket.off(\"receive_session\", handleReceiveSession);\n        };\n    }, [socket]);\n\n\n    return (\n        <SessionContext.Provider value={{sessions, setSessions}}>\n            {children}\n        </SessionContext.Provider>\n    );\n\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,cAAc,gBAAGN,aAAa,CAAC,CAAC;AACtC,OAAO,MAAMO,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGR,UAAU,CAACK,cAAc,CAAC;EAC1C,OAAO,CAACG,OAAO,CAACC,QAAQ,EAAED,OAAO,CAACE,WAAW,EAAEF,OAAO,CAACG,sBAAsB,CAAC;AAClF,CAAC;AAACJ,EAAA,CAHWD,UAAU;AAIvB,OAAO,MAAMM,eAAe,GAAGA,CAAC;EAACC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EAAAC,GAAA;EACnD,MAAM,CAACN,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,MAAMe,oBAAoB,GAAIP,QAAQ,IAAK;MACvCQ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAET,QAAQ,CAAC;MAC3CC,WAAW,CAACD,QAAQ,CAAC;IACzB,CAAC;IAEDI,MAAM,CAACM,EAAE,CAAC,iBAAiB,EAAEH,oBAAoB,CAAC;IAClD;IACAH,MAAM,CAACO,IAAI,CAAC,cAAc,CAAC;IAC3B,OAAO,MAAM;MACTP,MAAM,CAACQ,GAAG,CAAC,iBAAiB,EAAEL,oBAAoB,CAAC;IACvD,CAAC;EACL,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EAGZ,oBACIT,OAAA,CAACC,cAAc,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAACd,QAAQ;MAAEC;IAAW,CAAE;IAAAI,QAAA,EACnDA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAGlC,CAAC;AAACZ,GAAA,CAxBWH,eAAe;AAAAgB,EAAA,GAAfhB,eAAe;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}