{"ast":null,"code":"var _jsxFileName = \"/home/georg/kood/racetrack/src/front/pages/LapLineTrackerPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Alert, Card, Col, Container, Row } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LapLineTracker({\n  socket\n}) {\n  _s();\n  const [cars, setCars] = useState([]); // List of cars\n  const [hideButtons, setHideButtons] = useState(false);\n  const [lastlap, setLastLap] = useState(null);\n  // once on startup\n  useEffect(() => {\n    socket.emit(\"request-init-cars\");\n    // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    // Get initial list of cars\n    socket.on(\"init-cars\", cars => {\n      setCars(cars);\n    });\n\n    // Update cars data\n    socket.on(\"update-car\", updatedCar => {\n      setCars(prevCars => prevCars.map(car => car.number === updatedCar.number ? {\n        ...car,\n        fastestLap: updatedCar.fastestLap,\n        currentLap: updatedCar.currentLap\n      } : car));\n    });\n    socket.on(\"last_lap\", () => {\n      console.log(\"Last lap\");\n      setLastLap(true);\n    });\n    socket.on(\"last_call_message\", data => {\n      setHideButtons(data);\n    });\n    return () => {\n      socket.off(\"init-cars\");\n      socket.off(\"update-car\");\n      socket.off(\"last_lap\");\n      socket.off(\"last_call_message\");\n    };\n  }, [socket]);\n\n  // Button handler\n  const handleLapCross = carNumber => {\n    const timestamp = Date.now();\n    setCars(prevCars => prevCars.map(car => car.number === carNumber ? {\n      ...car,\n      currentLap: (car.currentLap || 0) + 1,\n      driveEnded: lastlap\n    } : car));\n    socket.emit(\"lap-cross\", {\n      carNumber,\n      timestamp\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      children: \"Lap Line Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), hideButtons && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: \"Race over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }, this), !hideButtons && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: cars.length <= 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"warning\",\n        children: \"No cars available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Row, {\n        className: \"g-4\",\n        children: cars.map(car => /*#__PURE__*/_jsxDEV(Col, {\n          xs: 6,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"shadow h-100\",\n            onClick: () => car.driveEnded ? null : handleLapCross(car.number),\n            style: {\n              cursor: \"pointer\",\n              backgroundColor: !car.driveEnded ? \"#32CD32\" : \"black\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                style: {\n                  fontSize: \"18px\"\n                },\n                children: [\"Car: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: \"30px\"\n                  },\n                  children: [\"#\", car.number]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 89\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Lap:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 49\n                }, this), \" \", car.currentLap || 0, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 93\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Fastest Lap:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 49\n                }, this), \" \", car.fastestLap ? `${car.fastestLap} ms` : \"N/A\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 37\n          }, this)\n        }, car.number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(LapLineTracker, \"Hhcs/hsS+a5sRoFzyWJjGFW4Ucc=\");\n_c = LapLineTracker;\nexport default LapLineTracker;\nvar _c;\n$RefreshReg$(_c, \"LapLineTracker\");","map":{"version":3,"names":["React","useEffect","useState","Alert","Card","Col","Container","Row","jsxDEV","_jsxDEV","Fragment","_Fragment","LapLineTracker","socket","_s","cars","setCars","hideButtons","setHideButtons","lastlap","setLastLap","emit","on","updatedCar","prevCars","map","car","number","fastestLap","currentLap","console","log","data","off","handleLapCross","carNumber","timestamp","Date","now","driveEnded","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","length","xs","lg","onClick","style","cursor","backgroundColor","Body","Title","fontSize","Text","_c","$RefreshReg$"],"sources":["/home/georg/kood/racetrack/src/front/pages/LapLineTrackerPage.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Alert, Card, Col, Container, Row} from \"react-bootstrap\";\n\nfunction LapLineTracker({socket}) {\n    const [cars, setCars] = useState([]); // List of cars\n    const [hideButtons, setHideButtons] = useState(false);\n    const [lastlap, setLastLap] = useState(null);\n    // once on startup\n    useEffect(() => {\n        socket.emit(\"request-init-cars\");\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        // Get initial list of cars\n        socket.on(\"init-cars\", (cars) => {\n            setCars(cars);\n        });\n\n        // Update cars data\n        socket.on(\"update-car\", (updatedCar) => {\n            setCars((prevCars) =>\n                prevCars.map((car) =>\n                    car.number === updatedCar.number\n                        ? {\n                            ...car,\n                            fastestLap: updatedCar.fastestLap,\n                            currentLap: updatedCar.currentLap,\n                        }\n                        : car\n                )\n            );\n        });\n\n        socket.on(\"last_lap\", () => {\n            console.log(\"Last lap\")\n            setLastLap(true)\n        })\n\n        socket.on(\"last_call_message\", (data) => {\n            setHideButtons(data);\n        });\n\n        return () => {\n            socket.off(\"init-cars\");\n            socket.off(\"update-car\");\n            socket.off(\"last_lap\");\n            socket.off(\"last_call_message\");\n        };\n    }, [socket]);\n\n    // Button handler\n    const handleLapCross = (carNumber) => {\n        const timestamp = Date.now();\n        setCars((prevCars) =>\n            prevCars.map((car) =>\n                car.number === carNumber\n                    ? {\n                        ...car,\n                        currentLap: (car.currentLap || 0) + 1,\n                        driveEnded: lastlap\n                    }\n                    : car\n            )\n        );\n        socket.emit(\"lap-cross\", {carNumber, timestamp});\n    };\n\n    return (\n        <Container className=\"mt-4\">\n            <h1 className=\"text-center mb-4\">Lap Line Tracker</h1>\n            {hideButtons && <Alert variant=\"danger\">Race over</Alert>}\n            {!hideButtons && (\n                <>\n                    {cars.length <= 0 ? (\n                        <Alert variant=\"warning\">No cars available</Alert>\n                    ) : (\n                        <Row className=\"g-4\">\n                            {cars.map((car) => (\n                                <Col key={car.number} xs={6} lg={3}>\n                                    <Card\n                                        className=\"shadow h-100\"\n                                        onClick={() => car.driveEnded ? null : handleLapCross(car.number)}\n                                        style={{\n                                            cursor: \"pointer\",\n                                            backgroundColor: !car.driveEnded ? \"#32CD32\" : \"black\"\n                                        }}\n                                    >\n                                        <Card.Body>\n                                            <Card.Title style={{fontSize: \"18px\"}}>Car: <span\n                                                style={{fontSize: \"30px\"}}>#{car.number}</span></Card.Title>\n                                            <Card.Text>\n                                                <strong>Lap:</strong> {car.currentLap || 0} <br/>\n                                                <strong>Fastest\n                                                    Lap:</strong> {car.fastestLap ? `${car.fastestLap} ms` : \"N/A\"}\n                                            </Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            ))}\n                        </Row>\n                    )}\n                </>\n            )}\n        </Container>\n    );\n}\n\nexport default LapLineTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}