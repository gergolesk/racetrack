{"ast":null,"code":"var _jsxFileName = \"/home/georg/kood/racetrack/src/front/components/NextRace.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NextRace({\n  socket\n}) {\n  _s();\n  const [nextSession, setNextSession] = useState(null);\n\n  //check if next race is sheared\n  useEffect(() => {\n    const handleNextSession = data => {\n      if (!data.nextRace) setNextSession(null);else setNextSession(data.nextRace);\n    };\n    socket.on(\"get_next_session\", handleNextSession);\n    return () => {\n      socket.off(\"get_next_session\", handleNextSession);\n    };\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fullscreenDiv\",\n      children: nextSession ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Next Starting Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: nextSession.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Starts at: \", new Date(nextSession.startTime).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Duration: \", nextSession.duration, \" minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: nextSession.drivers && nextSession.drivers.length > 0 ? nextSession.drivers.map((driver, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Driver: \", driver.name, \" Car: \", driver.carNumber]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 37\n          }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No drives available. \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Races\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(NextRace, \"z1e/C7C0HtNdnnFLP78XxOD1gco=\");\n_c = NextRace;\nexport default NextRace;\nvar _c;\n$RefreshReg$(_c, \"NextRace\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","NextRace","socket","_s","nextSession","setNextSession","handleNextSession","data","nextRace","on","off","children","className","fileName","_jsxFileName","lineNumber","columnNumber","name","Date","startTime","toLocaleString","duration","drivers","length","map","driver","index","carNumber","_c","$RefreshReg$"],"sources":["/home/georg/kood/racetrack/src/front/components/NextRace.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\n\nfunction NextRace({socket}) {\n    const [nextSession, setNextSession] = useState(null)\n\n    //check if next race is sheared\n    useEffect(() => {\n        const handleNextSession = (data) => {\n            if (!data.nextRace)\n                setNextSession(null)\n            else\n                setNextSession(data.nextRace)\n        }\n        socket.on(\"get_next_session\", handleNextSession)\n\n        return () => {\n            socket.off(\"get_next_session\", handleNextSession)\n        }\n    }, [socket])\n\n    return (\n        <div>\n            <div className=\"fullscreenDiv\">\n                {nextSession ? (\n                    <div>\n                        <h2>Next Starting Session</h2>\n                        <p>{nextSession.name}</p>\n                        <p>Starts at: {new Date(nextSession.startTime).toLocaleString()}</p>\n                        <p>Duration: {nextSession.duration} minutes</p>\n                        <ul>\n                            {nextSession.drivers && nextSession.drivers.length > 0 ? (\n                                nextSession.drivers.map((driver, index) => (\n                                    <li key={index}>\n                                        Driver: {driver.name} Car: {driver.carNumber}\n                                    </li>\n                                ))) : (\n                                <li>No drives available. </li>\n                            )\n                            }\n                        </ul>\n                    </div>\n                ) : (\n                    <p>No Races</p>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default NextRace"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,QAAQA,CAAC;EAACC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMS,iBAAiB,GAAIC,IAAI,IAAK;MAChC,IAAI,CAACA,IAAI,CAACC,QAAQ,EACdH,cAAc,CAAC,IAAI,CAAC,MAEpBA,cAAc,CAACE,IAAI,CAACC,QAAQ,CAAC;IACrC,CAAC;IACDN,MAAM,CAACO,EAAE,CAAC,kBAAkB,EAAEH,iBAAiB,CAAC;IAEhD,OAAO,MAAM;MACTJ,MAAM,CAACQ,GAAG,CAAC,kBAAkB,EAAEJ,iBAAiB,CAAC;IACrD,CAAC;EACL,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,oBACIF,OAAA;IAAAW,QAAA,eACIX,OAAA;MAAKY,SAAS,EAAC,eAAe;MAAAD,QAAA,EACzBP,WAAW,gBACRJ,OAAA;QAAAW,QAAA,gBACIX,OAAA;UAAAW,QAAA,EAAI;QAAqB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BhB,OAAA;UAAAW,QAAA,EAAIP,WAAW,CAACa;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBhB,OAAA;UAAAW,QAAA,GAAG,aAAW,EAAC,IAAIO,IAAI,CAACd,WAAW,CAACe,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpEhB,OAAA;UAAAW,QAAA,GAAG,YAAU,EAACP,WAAW,CAACiB,QAAQ,EAAC,UAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC/ChB,OAAA;UAAAW,QAAA,EACKP,WAAW,CAACkB,OAAO,IAAIlB,WAAW,CAACkB,OAAO,CAACC,MAAM,GAAG,CAAC,GAClDnB,WAAW,CAACkB,OAAO,CAACE,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAClC1B,OAAA;YAAAW,QAAA,GAAgB,UACJ,EAACc,MAAM,CAACR,IAAI,EAAC,QAAM,EAACQ,MAAM,CAACE,SAAS;UAAA,GADvCD,KAAK;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACP,CAAC,gBACFhB,OAAA;YAAAW,QAAA,EAAI;UAAqB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAChC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAED,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,gBAENhB,OAAA;QAAAW,QAAA,EAAG;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACjB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACb,EAAA,CA7CQF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA+CjB,eAAeA,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}