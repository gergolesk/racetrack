{"ast":null,"code":"var _jsxFileName = \"/home/georg/kood/racetrack/src/front/pages/components/CountdownModal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountdownModal = ({\n  startCount,\n  onCountdownFinish,\n  onClose\n}) => {\n  _s();\n  const [countdownValue, setCountdownValue] = useState(startCount);\n  useEffect(() => {\n    let count = startCount;\n    const interval = setInterval(() => {\n      count -= 1;\n      if (count > 0) {\n        setCountdownValue(count);\n      } else {\n        clearInterval(interval);\n        setCountdownValue(\"GO!\");\n        setTimeout(() => {\n          setCountdownValue(null); // Сбрасываем значение\n          onCountdownFinish(); // Уведомляем родительский компонент о завершении\n        }, 1000);\n      }\n    }, 1000);\n    return () => clearInterval(interval); // Очищаем таймер при размонтировании\n  }, [startCount, onCountdownFinish]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: countdownValue !== null // Показываем, если есть значение отсчёта\n    ,\n    centered: true,\n    backdrop: \"static\",\n    keyboard: false,\n    onHide: onClose // Для кнопки закрытия\n    ,\n    children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"4rem\",\n          textAlign: \"center\",\n          fontWeight: \"bold\"\n        },\n        children: countdownValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(CountdownModal, \"CVVJJJtiDZx8aOn715DdbYwDmi8=\");\n_c = CountdownModal;\nexport default CountdownModal;\nvar _c;\n$RefreshReg$(_c, \"CountdownModal\");","map":{"version":3,"names":["React","useEffect","useState","Modal","jsxDEV","_jsxDEV","CountdownModal","startCount","onCountdownFinish","onClose","_s","countdownValue","setCountdownValue","count","interval","setInterval","clearInterval","setTimeout","show","centered","backdrop","keyboard","onHide","children","Body","style","fontSize","textAlign","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/georg/kood/racetrack/src/front/pages/components/CountdownModal.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\n\nconst CountdownModal = ({ startCount, onCountdownFinish, onClose }) => {\n    const [countdownValue, setCountdownValue] = useState(startCount);\n\n    useEffect(() => {\n        let count = startCount;\n        const interval = setInterval(() => {\n            count -= 1;\n            if (count > 0) {\n                setCountdownValue(count);\n            } else {\n                clearInterval(interval);\n                setCountdownValue(\"GO!\");\n                setTimeout(() => {\n                    setCountdownValue(null); // Сбрасываем значение\n                    onCountdownFinish(); // Уведомляем родительский компонент о завершении\n                }, 1000);\n            }\n        }, 1000);\n\n        return () => clearInterval(interval); // Очищаем таймер при размонтировании\n    }, [startCount, onCountdownFinish]);\n\n    return (\n        <Modal\n            show={countdownValue !== null} // Показываем, если есть значение отсчёта\n            centered\n            backdrop=\"static\"\n            keyboard={false}\n            onHide={onClose} // Для кнопки закрытия\n        >\n            <Modal.Body>\n                <div\n                    style={{\n                        fontSize: \"4rem\",\n                        textAlign: \"center\",\n                        fontWeight: \"bold\",\n                    }}\n                >\n                    {countdownValue}\n                </div>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nexport default CountdownModal;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,UAAU;EAAEC,iBAAiB;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAACK,UAAU,CAAC;EAEhEN,SAAS,CAAC,MAAM;IACZ,IAAIY,KAAK,GAAGN,UAAU;IACtB,MAAMO,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BF,KAAK,IAAI,CAAC;MACV,IAAIA,KAAK,GAAG,CAAC,EAAE;QACXD,iBAAiB,CAACC,KAAK,CAAC;MAC5B,CAAC,MAAM;QACHG,aAAa,CAACF,QAAQ,CAAC;QACvBF,iBAAiB,CAAC,KAAK,CAAC;QACxBK,UAAU,CAAC,MAAM;UACbL,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;UACzBJ,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC;MACZ;IACJ,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMQ,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACP,UAAU,EAAEC,iBAAiB,CAAC,CAAC;EAEnC,oBACIH,OAAA,CAACF,KAAK;IACFe,IAAI,EAAEP,cAAc,KAAK,IAAK,CAAC;IAAA;IAC/BQ,QAAQ;IACRC,QAAQ,EAAC,QAAQ;IACjBC,QAAQ,EAAE,KAAM;IAChBC,MAAM,EAAEb,OAAQ,CAAC;IAAA;IAAAc,QAAA,eAEjBlB,OAAA,CAACF,KAAK,CAACqB,IAAI;MAAAD,QAAA,eACPlB,OAAA;QACIoB,KAAK,EAAE;UACHC,QAAQ,EAAE,MAAM;UAChBC,SAAS,EAAE,QAAQ;UACnBC,UAAU,EAAE;QAChB,CAAE;QAAAL,QAAA,EAEDZ;MAAc;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEhB,CAAC;AAACtB,EAAA,CA3CIJ,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AA6CpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}